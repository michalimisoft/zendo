name: ZenDo CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # JOB 1: Uruchom testy
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: zendo_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql

    - name: Install Composer dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h 127.0.0.1 -P 3306 -u root -proot --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Setup test database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -proot -e "CREATE DATABASE IF NOT EXISTS zendo_test;"
        mysql -h 127.0.0.1 -P 3306 -u root -proot zendo_test < database.sql

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit tests/ --testdox

    - name: ✅ Tests passed!
      run: echo "All tests passed successfully! Ready for deployment."

  # JOB 2: Wdrażanie (tylko po pomyślnych testach i tylko na main branch)
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: 🚀 Prepare files for deployment
      run: |
        echo "Preparing deployment package..."
        
        # Utwórz folder deployment
        mkdir -p deployment
        
        # Kopiuj wszystkie pliki OPRÓCZ config i tests
        rsync -av --progress . deployment/ \
          --exclude '.git' \
          --exclude '.github' \
          --exclude 'tests' \
          --exclude 'config' \
          --exclude 'vendor' \
          --exclude 'composer.json' \
          --exclude 'composer.lock' \
          --exclude 'phpunit.xml' \
          --exclude '.gitignore' \
          --exclude 'readme.md' \
          --exclude 'deployment'
        
        # Pokaż co zostanie wysłane
        echo "Files to be deployed:"
        find deployment -type f | head -20

    - name: 📦 Deploy to Production Server via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deployment/
        server-dir: ${{ secrets.FTP_SERVER_DIR }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/tests/**
          **/config/**
          **/.env
          **/composer.json
          **/composer.lock
          **/phpunit.xml

    - name: 🎉 Deployment completed
      run: |
        echo "🚀 Deployment to production completed successfully!"
        echo "📅 Deployed at: $(date)"
        echo "📝 Commit: ${{ github.sha }}"

  # JOB 3: Powiadomienie o wdrożeniu (opcjonalne)
  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📧 Send deployment notification
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ SUKCES: ZenDo zostało pomyślnie wdrożone na serwer produkcyjny!"
          echo "🔗 Sprawdź: https://twoja-domena.com"
        else
          echo "❌ BŁĄD: Wdrożenie nie powiodło się."
        fi